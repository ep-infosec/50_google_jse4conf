# Cyclic references

[T1] ; valid recursive calls with escape
  useJSE = true
  # f1 and f2 depends on each other but okay
  f1 = (n) => n < 1 ? 1 : n * f2(n-1)
  f2 = (n) => n < 1 ? 1 : n + f1(n-1)
  v1 = f1(3) ; 3*f2(2) = 3*(2+f1(1)) = 3*(2+(1*f2(0)) = 3*(2+(1*1)) = 9
  v2 = f2(3) ; 3+f1(2) = 3+(2*f2(1)) = 3+(2*(1+f1(0)) = 3+(2*(1+1)) = 7

[T2] # unresolvable cyclic dependency
  useJSE = true
  v1 = v2 + 10
  v2 = v1 + 20
  ; v2 is evaluated first, because v1 needs v2
  ; v1 is not defined yet, so v2 is 'v1 + 20'
  ; after v2, v1 is computed as v2 + 100 = 'v1 + 20' + 100 = 'v1 + 2010'
